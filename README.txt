汉诺塔游戏 
========================================

项目简介
--------
这是一个用Qt5 与 C++开发的汉诺塔游戏，支持可视化演示和手动操作。

功能特色
--------
1. 可视化界面：使用Qt5创建的现代化图形界面
2. 自动演示：观看算法自动解决汉诺塔问题
3. 手动操作：用户可以手动移动圆盘
4. 进度显示：实时显示解题进度和步数
5. 速度控制：可调节演示速度
6. 步数统计：显示当前步数和最优解步数

编译环境
--------
- Qt版本：5.12.12 或更高
- 编译器：MinGW 7.3.0
- 操作系统：Windows 10+
- 构建工具：qmake

项目文件结构
------------
src/
├── main_final.cpp         主程序入口
├── gamecontroller.cpp/.h  游戏控制器（核心逻辑）
├── gamedisplay.cpp/.h     游戏显示组件
├── hanoigame.h           游戏接口定义
├── hanoigame.cpp    汉诺塔游戏逻辑实现
└── mainwindow.cpp/.h 主窗口界面

forms/mainwindow.ui        Qt Designer界面文件
resources/resources.qrc    资源文件
HanoiTower.pro   Qt项目文件

编译步骤
--------
方法1：使用Qt Creator
1. 启动Qt Creator
2. 打开项目文件：HanoiTower.pro
3. 配置编译环境（选择MinGW套件）
4. 点击"构建"按钮编译项目
5. 点击"运行"按钮启动程序

方法2：命令行编译
1. 打开Qt命令提示符
2. 进入项目目录
3. 执行：qmake HanoiTower.pro
4. 执行：make
5. 运行生成的可执行文件

使用说明
--------
1. 启动程序后，圆盘会显示在最左边的柱子上
2. 点击"重置"按钮重新开始游戏
3. 点击"开始演示"观看自动解题过程
4. 可以使用"暂停/继续"控制演示进度
5. 调节滑动条改变演示速度
6. 手动模式下点击柱子按钮(柱子A，柱子B，柱子C)进行移动
7. 程序会显示当前步数和最优解步数

核心组件说明
-----------
GameController：
- 协调游戏各组件的交互
- 管理演示模式的启动、暂停、停止
- 处理用户输入和游戏状态更新

HanoiGame：
- 实现汉诺塔游戏的核心逻辑
- 提供移动验证和状态管理
- 生成最优解的移动序列

GameDisplay：
- 负责游戏的可视化显示
- 处理用户的鼠标点击事件
- 提供界面状态反馈

MainWindow：
- 主界面布局和控件管理
- 连接各组件的信号和槽
- 处理界面事件

GitHub项目地址
--------------
https://github.com/MaJiaxiang05/hanoi-tower-qt

开发备注
--------
- 项目已优化为仅包含多文件版本的核心代码
- 使用模块化设计，便于理解和维护
- 代码注释详细，适合学习参考
- 项目已成功上传到GitHub，可供开源分享

联系信息
--------
如有问题或建议，请通过GitHub项目页面提交Issue。
也可通过电子邮箱与我们联系
1732650757@qq.com
2446594219@qq.com

最后更新：2025年7月3日 